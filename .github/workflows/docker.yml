---
name: Build and publish Docker image

on:
  push:
    paths:
      - "app/**"
      - "bin/**"
      - "config/**"
      - "db/**"
      - "lib/**"
      - "public/**"
      - "vendor/**"
      - "**.js"
      - "**.erb"
      - "**.rb"
      - "**.yml"
      - "Dockerfile"
      - "Gemfile.lock"
      - "yarn.lock"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository_owner }}/gitlab-dashboard
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha
          labels: |
            maintainer=Pedro Pombeiro
            org.opencontainers.image.title=GitLab MR Dashboard
            org.opencontainers.image.description=A productivity-focused MR dashboard for GitLab.com
            org.opencontainers.image.vendor=Pedro Pombeiro

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "GIT_REPO_COMMIT_SHA=${{ github.sha }}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
